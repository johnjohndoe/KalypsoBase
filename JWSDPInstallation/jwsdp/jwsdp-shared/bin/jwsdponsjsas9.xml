<!--
 Copyright 2004 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<project name="JWSDP component integration with Sun Java System App Server 9.0" default="full-setup" basedir=".">

    <!-- ========== Version numbers for JWSDP components ================= -->

  <property name="ant.home" value="${basedir}/../../apache-ant"/>
  <property name="jwsdp.version" value="2.0"/>


  <target name="check.sjsas.home" unless="SJSAS_HOME">
    <echo>
      The sjsas.home property is not set correctly. Please
      pass this property with the value set to the directory
      where the Sun Java System Application Server 9.0 is
      installed and rerun ant with the following usage: 
          ant -Djwsdp.home=xxx -Dsjsas.home=yyy -Ddomain.dir=aaa -Ddomain.name=bbb target
    </echo>
    <fail message="sjsas.home property is not set correctly"/>
  </target>

  <target name="check.jwsdp.home" unless="JWSDP_HOME">
    <echo>
      The jwsdp.home property is not set correctly. Please
      pass this property with the value set to the directory
      where the Java(TM) Web Services Developer Pack 2.0 is
      installed and rerun ant with the following usage:
           ant -Djwsdp.home=xxx -Dsjsas.home=yyy -Ddomain.dir=aaa -Ddomain.name=bbb target
    </echo>
    <fail message="jwsdp.home property is not set correctly"/>
  </target>

  <target name="check.domain.dir" unless="DOMAIN_NAME">
    <echo>
      One of the domain properties is not set correctly. Please
      pass the domain.dir and domain.name properties with the domain.dir
      value set to the directory where the domain directory is located
      and domain.name set to the name of the domain and rerun ant with
      the following usage:
           ant -Djwsdp.home=xxx -Dsjsas.home=yyy -Ddomain.dir=aaa -Ddomain.name=bbb target
    </echo>
    <fail message="domain.dir or domain.name property is not set correctly"/>
  </target>
 

  <target name="init">
    <tstamp/>
    <!-- Loading Sun Java System App Server properties -->
    <property file="${basedir}/sjsas.props" />

    <available property="JWSDP_HOME" value="${jwsdp.home}"
      file="${jwsdp.home}/jwsdp-shared/bin/commons-launcher.jar" />

    <antcall target="check.jwsdp.home"/>

    <available property="SJSAS_HOME" value="${sjsas.home}"
      file="${sjsas.home}/lib/appserv-cmp.jar" />

    <antcall target="check.sjsas.home"/>

    <property name="DOMAIN_DIR" value="${domain.dir}" />

    <available property="DOMAIN_NAME" value="${domain.name}"
      file="${domain.dir}/${domain.name}/config/domain.xml" />
    <antcall target="check.domain.dir"/>

    <available property="jdbc-rowset.integrated" value="true"
      file="${jwsdp.home}/jdbc-rowset/lib/rowset.jar" />

    <condition property="isNotWindows">
      <not>
        <os family="windows" />
      </not>
    </condition>

    <condition property="isWindows">
        <os family="windows" />
    </condition>

    <echo message="Os is ${os.name}" />

    <property name="SJSAS_DEPLOY" value="${SJSAS_HOME}/bin/asadmin"/>
    <property name="MYTEMPDIR" value="${JWSDP_HOME}/work/forappserver9"/>


    <property name="USERNAME" value="${USERNAME}" />
    <property name="PASSWORD" value="${PASSWORD}" />
    <property name="SJSAS_HOST" value="${SJSAS_HOST}" />
    <property name="SJSAS_PORT" value="${SJSAS_PORT}" />
    <property name="HTTPS_PORT" value="${HTTPS_PORT}" />
    <property name="ADMIN_PORT" value="${ADMIN_PORT}" />
    <property name="http.proxyHost" value="${http.proxyHost}" />
    <property name="http.proxyPort" value="${http.proxyPort}" />
    <echo message="Creating temporary directory under JWSDP_HOME/work for storing war files and others" />
    <mkdir dir="${MYTEMPDIR}" />

    <property name="JWSDP_BACKUPDIR" value="${SJSAS_HOME}/.jwsdp.backup" />
    <mkdir dir="${MYTEMPDIR}/for-jaxwsa" />
  </target>

  <target name="startadmin" depends="init"
    description="Start Admin server">

    <antcall target="startadmin.sh" />
    <antcall target="startadmin.bat" />
  </target>


  <target name="startadmin.sh" depends="init"  if="isNotWindows" >
       <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/startserv"  />
 </target>

  <target name="startadmin.bat" depends="init"  if="isWindows" >
       <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/startserv.bat"  />
 </target>
 
  <target name="stopadmin" depends="init"
    description="Stop Admin server">

    <antcall target="stopadmin.sh" />
    <antcall target="stopadmin.bat" />
  </target>

  <target name="stopadmin.sh" depends="init" if="isNotWindows"  >
        <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/stopserv"  />
  </target>

  <target name="stopadmin.bat" depends="init"  if="isWindows">
        <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/stopserv.bat"  />
  </target>

  
  <target name="start-sjsas" depends="init"
    description="Start server">

    <antcall target="start-sjsas.sh" />
    <antcall target="start-sjsas.bat" />
  </target>

  <target name="start-sjsas.sh" depends="init" if="isNotWindows"  >
<!--    <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/startserv" /> -->
    <exec executable="${SJSAS_HOME}/bin/asadmin">
      <arg line="start-domain ${DOMAIN_NAME}" />
    </exec>
  </target>

  <target name="start-sjsas.bat" depends="init"  if="isWindows" >
<!--    <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/startserv.bat" /> -->

    <exec executable="${SJSAS_HOME}/bin/asadmin.bat">
      <arg line="start-domain ${DOMAIN_NAME}" />
    </exec>
  </target>

  <target name="stop-sjsas" depends="init"
    description="Stop server">

    <antcall target="stop-sjsas.sh" />
    <antcall target="stop-sjsas.bat" />
 </target>

  <target name="stop-sjsas.sh" depends="init"  if="isNotWindows" >
<!--    <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/stopserv" /> -->
    <exec executable="${SJSAS_HOME}/bin/asadmin">
      <arg line="stop-domain ${DOMAIN_NAME}" />
    </exec>
 </target>

  <target name="stop-sjsas.bat" depends="init" if="isWindows" >
<!--    <exec executable="${DOMAIN_DIR}/${DOMAIN_NAME}/bin/stopserv.bat" /> -->
    <exec executable="${SJSAS_HOME}/bin/asadmin.bat">
      <arg line="stop-domain ${DOMAIN_NAME}" />
    </exec>
 </target>

  <target name="create.classpath.prefix" if="prefixUndefined" >
    <echo message="Adding classpath-prefix to ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
      <replacevalue><![CDATA[classpath-prefix="" system-classpath="]]></replacevalue>
      <replacetoken><![CDATA[system-classpath="]]></replacetoken>
    </replace>
  </target>
 
  <target name="integrate.init" depends="init"
    description="Initialize integration for Sun Java System Application Server 9.0">

    <property file="${basedir}/../../conf/jwsdp.properties" />
    <echo message="Adding AS9.0 to containers info" />
    <propertyfile file="${user.home}/.jwsdp.info-${jwsdp.version}" >
        <entry key="containers" value="AS9.0 " operation="+" />
    </propertyfile>

    <echo message="Adding AS9.0_HOME info into jwsdp.properties" />
    <propertyfile file="${basedir}/../../jwsdp-shared/bin/jwsdp.properties" >
        <entry key="AS9.0_HOME" value="${SJSAS_HOME}"  />
    </propertyfile>

    <echo message="Adding AS9.0_HOME info into the LIST in jwsdp.properties" />
    <propertyfile file="${basedir}/../../jwsdp-shared/bin/jwsdp.properties" >
        <entry key="AS9.0_HOME_LIST" value="${SJSAS_HOME} " operation="+"  />
    </propertyfile>

    <echo message="Creating Backup directory for the integration" />
    <mkdir dir="${JWSDP_BACKUPDIR}" />

    <copy file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" 
	tofile="${JWSDP_BACKUPDIR}/domain.xml" overwrite="false" />

    <echo message="Copying JWSDP Splash page" />
    <copy file="${JWSDP_HOME}/jwsdp-shared/index_sjs.html" 
	tofile="${DOMAIN_DIR}/${DOMAIN_NAME}/docroot/JWSDP.html" />

    <copy file="${JWSDP_HOME}/jwsdp-shared/javaxml.gif"
        todir="${DOMAIN_DIR}/${DOMAIN_NAME}/docroot" />

    <copy file="${JWSDP_HOME}/jwsdp-shared/Components.js"
        todir="${DOMAIN_DIR}/${DOMAIN_NAME}/docroot" />

    <echo message="Updating domain.xml to set proxy information" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='&lt;jvm-options>-Dhttp.proxyHost=${http.proxyHost}&lt;/jvm-options> &lt;jvm-options>-Dhttp.proxyPort=${http.proxyPort}&lt;/jvm-options> &lt;jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy&lt;/jvm-options>'>
      <replacetoken><![CDATA[<jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>]]></replacetoken>
    </replace>

    <!-- Check if need to add classpath-prefix --> 
    <loadfile property="prefixLines" srcFile="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" />

    <condition property="prefixUndefined">
      <not>
        <contains string="${prefixLines}" substring="classpath-prefix"/>
      </not>
    </condition>

    <antcall target="create.classpath.prefix" />

     <!-- Integrate jwsdp-callback application into App Server   -->
    <echo message="Creating jwsdp-callback.war" />
    <jar destfile="${MYTEMPDIR}/jwsdp-callback.war"
        basedir="${JWSDP_HOME}/jwsdp-shared/webapps/jwsdp-callback" />
    <echo message="Using autodeploy to deploy jwsdp-callback.war" />
    <copy file="${MYTEMPDIR}/jwsdp-callback.war"
        tofile="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/jwsdp-callback.war" 
        failonerror="false" overwrite="yes" />

    <!-- Update security permissions ( can separate out by component later )  -->
    <antcall target="update-security-permissions" />
   
  </target>


  <target name="setup" depends="init"
    description="Setup environment needed  for integrating JWSDP into Sun Java System Application Server 9.0">

    <echo message="Stop the server" />
    <antcall target="stop-sjsas" />

    <echo message="Initializing integration" />
    <antcall target="integrate.init" />

    <echo message="Integrating JAXP" />
    <antcall target="integrate.jaxp" />

    <echo message="Integrating SAAJ" />
    <antcall target="integrate.saaj" />

    <echo message="Integrating JAXB" />
    <antcall target="integrate.jaxb" />

    <echo message="Integrating JAXR" />
    <antcall target="integrate.jaxr" />

    <echo message="Integrating JSTL" />
    <antcall target="integrate.jstl" />

    <echo message="Integrating JAX-RPC" />
    <antcall target="integrate.jaxrpc" />

    <echo message="Integrating JAX-WS" />
    <antcall target="integrate.jaxws" />

    <echo message="Integrating JAX-WSA" />
    <antcall target="integrate.jaxwsa" />

    <echo message="Integrating WS-I Sample Application" />
    <antcall target="integrate.wsi-sampleapp" />

    <echo message="Integrating XML and Web Services Security" />
    <antcall target="integrate.xws-security" />

    <echo message="Integrating XML Digital Signatures" />
    <antcall target="integrate.xmldsig" />

    <echo message="Integrating Streaming API for XML" />
    <antcall target="integrate.sjsxp" />

    <echo message="Integrating Fast Infoset" />
    <antcall target="integrate.fastinfoset" />

    <echo message="Integrating Service Registry" />
    <antcall target="integrate.registry" />


  </target>


    <target name="integrate.jstl"
      description="Integrate JSTL into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
    </target>

    <target name="integrate.jsf"
      description="Integrate JSF into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
    </target>

  <target name="integrate.jaxp" depends="init"
    description="Integrate JAXP into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
 </target>


  <target name="integrate.saaj" depends="init"
    description="Integrate SAAJ into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="deploy.saaj.webapps" depends="init"
    description="Deploy SAAJ into Sun Java System Application Server 9.0">
    <echo message="Integrating SAAJ samples" />
    <copy file="${JWSDP_HOME}/saaj/webapps/simple.war"
        tofile="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-simple.war" 
        failonerror="false" overwrite="yes" />

    <copy file="${JWSDP_HOME}/saaj/webapps/book.war"
        tofile="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-book.war" 
        failonerror="false" overwrite="yes" />

    <copy file="${JWSDP_HOME}/saaj/webapps/translator.war"
        tofile="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-translator.war" 
        failonerror="false" overwrite="yes" />

  </target>

  <target name="integrate.xmldsig" depends="init"
    description="Integrate JSR 105 into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="integrate.spja" depends="init"
    description="Integrate SPJA ( JSR 223 ) into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="deploy.spja.webapps" depends="init"
    description="Deploy SPJA into Sun Java System Application Server 9.0">
    <echo message="Integrating SPJA samples" />
    <copy file="${JWSDP_HOME}/spja/webapps/script.war"
        tofile="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/script.war"
        failonerror="false" overwrite="yes" />
  </target>

  <target name="integrate.sjsxp" depends="init"
    description="Integrate StAX into Sun Java System Application Server 9.0">

    
    <echo message="Copying StAX jar files to ${SJSAS_HOME}/lib" />

    <copy todir="${SJSAS_HOME}/lib" overwrite="yes" >
	<fileset dir="${JWSDP_HOME}/sjsxp/lib">  
          <include name="*.jar"/>
        </fileset>
    </copy>
   

  </target>

  <target name="integrate.common-jars" depends="init">
    <echo message="Copying jwsdp-shared jar files to ${SJSAS_HOME}/lib" />

    <!-- Copying namespace.jar and jax-qname.jar into new dir to avoid
      "signer information does not match" error because of duplication
       of the classes as signed and non signed -->

    <unjar src="${JWSDP_HOME}/jwsdp-shared/lib/relaxngDatatype.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <unjar src="${JWSDP_HOME}/jwsdp-shared/lib/xsdlib.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <unjar src="${JWSDP_HOME}/jwsdp-shared/lib/resolver.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="false"/>

  </target>

  <target name="integrate.jaxb" depends="init" 
    description="Integrate JAXB into Sun Java System Application Server 9.0">

      <!-- Do nothing -->

  </target>

  <target name="integrate.jaxwsa" depends="init"
    description="Integrate JAX-WSA into Sun Java System Application Server 9.0">

      <!-- Copy JAXB jars into directory for-jaxwsa for aggregation   -->
      <unjar src="${JWSDP_HOME}/jaxb/lib/jaxb-api.jar"
         dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

      <unjar src="${JWSDP_HOME}/jaxb/lib/jaxb-impl.jar"
         dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

      <unjar src="${JWSDP_HOME}/jaxb/lib/jaxb1-impl.jar"
         dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

      <unjar src="${JWSDP_HOME}/jaxb/lib/jaxb-xjc.jar"
         dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <echo message="Copying JAXWS jar files to ${SJSAS_HOME}/lib" />


    <unjar src="${JWSDP_HOME}/jaxws/lib/jaxws-tools.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <unjar src="${JWSDP_HOME}/jaxws/lib/jaxws-api.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <unjar src="${JWSDP_HOME}/jaxws/lib/jaxws-rt.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <unjar src="${JWSDP_HOME}/jaxws/lib/jsr181-api.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <unjar src="${JWSDP_HOME}/jaxws/lib/jsr250-api.jar"
	 dest="${MYTEMPDIR}/for-jaxwsa" overwrite="yes"/>

    <echo message="Aggregating all the clases that are needed to overwrite content of appserv-ws.jar" />
    <jar destfile="${MYTEMPDIR}/appserv-ws-update.jar" basedir="${MYTEMPDIR}/for-jaxwsa" />

    <copy file="${MYTEMPDIR}/appserv-ws-update.jar"
	 todir="${SJSAS_HOME}/lib" overwrite="yes" failonerror="false"/>

    <echo message="Copying JAXWSA jar files to ${SJSAS_HOME}/lib" />
    


    
    <copy file="${JWSDP_HOME}/jaxwsa/lib/jaxwsa-api.jar"
	 todir="${SJSAS_HOME}/lib" overwrite="yes" failonerror="false"/>

    <copy file="${JWSDP_HOME}/jaxwsa/lib/jaxwsa-ri.jar"
	 todir="${SJSAS_HOME}/lib" overwrite="yes" failonerror="false" />

    <echo message="Now Update JAX-WS Scripts" />
    <antcall target="update.jaxws-scripts.sh" />
    <antcall target="update.jaxws-scripts.bat" />

   <echo message="Change environment( domain.xml ) for JAX-WSA" />
   <antcall target="change-env-for-jax-wsa.sh" />
   <antcall target="change-env-for-jax-wsa.bat" />

  </target>


  <target name="integrate.jaxws" depends="init"
    description="Integrate JAX-WS into Sun Java System Application Server 9.0">

      <!-- Do nothing -->

  </target>



  <target name="integrate.jaxrpc" depends="init"
    description="Integrate JAX-RPC into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="integrate.jaxr" depends="init"
    description="Integrate JAXR into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>



  <target name="integrate.xws-security" depends="init"
    description="Integrate XML and Web Services Security into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="integrate.wsi-sampleapp" depends="init" >
    <echo message="In integrate.wsi-sampleapp. No-op" />
      <!-- Do nothing -->
  </target>


  <target name="update-security-permissions" >
    <echo message="Updating security permissions in server.policy" />
    <copy file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/server.policy"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/server.policy">
      <replacetoken><![CDATA[// Basic set of required permissions granted to all remaining code]]></replacetoken>
      <replacevalue><![CDATA[// These permissions apply to the privileged soar webapp
grant codeBase "file:${com.sun.aas.instanceRoot}/applications/j2ee-modules/soar/-" {
        permission java.security.AllPermission;
};


// These permissions apply to jwsdp-callback  webapp
grant codeBase "file:${com.sun.aas.instanceRoot}/applications/j2ee-modules/jwsdp-callback/WEB-INF/-" {
        permission java.security.AllPermission;
};

// These permissions apply to wsi-server ( WSI Sample App ) webapp
grant codeBase "file:${com.sun.aas.instanceRoot}/applications/j2ee-modules/wsi-server/WEB-INF/-" {
        permission java.security.AllPermission;
};

// These permissions apply to saaj-translator webapp
grant codeBase "file:${com.sun.aas.instanceRoot}/applications/j2ee-modules/saaj-translator/WEB-INF/-" {
        permission java.util.PropertyPermission "*", "read,write";
};


//  Basic set of required permissions granted to all remaining code
]]></replacevalue>
    </replace>

  </target>

   <target name="revert-env-for-jax-wsa.sh" if="isNotWindows" depends="init" >

    <echo message="Reverting ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml changes made for JAX-WSA on windows platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
     <replacetoken><![CDATA[classpath-prefix="${SJSAS_HOME}/lib/appserv-ws-update.jar:${SJSAS_HOME}/lib/jaxwsa-api.jar:${SJSAS_HOME}/lib/jaxwsa-ri.jar:]]></replacetoken>
      <replacevalue><![CDATA[classpath-prefix="]]></replacevalue>
    </replace>
   </target>


   <target name="change-env-for-jax-wsa.sh" if="isNotWindows" depends="init" >

    <echo message="Changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for windows platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='classpath-prefix="${SJSAS_HOME}/lib/appserv-ws-update.jar:${SJSAS_HOME}/lib/jaxwsa-api.jar:${SJSAS_HOME}/lib/jaxwsa-ri.jar:' >
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>

   </target>

   <target name="revert-env-for-jax-wsa.bat" if="isWindows" depends="init" >

    <echo message="Reverting ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml changes made for JAX-WSA on windows platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
      <replacetoken><![CDATA[classpath-prefix="${SJSAS_HOME}/lib/appserv-ws-update.jar;${SJSAS_HOME}/lib/jaxwsa-api.jar;${SJSAS_HOME}/lib/jaxwsa-ri.jar;]]></replacetoken>
      <replacevalue><![CDATA[classpath-prefix="]]></replacevalue>
    </replace>

   </target>

   <target name="change-env-for-jax-wsa.bat" if="isWindows" depends="init" >

    <echo message="Changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for windows platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='classpath-prefix="${SJSAS_HOME}/lib/appserv-ws-update.jar;${SJSAS_HOME}/lib/jaxwsa-api.jar;${SJSAS_HOME}/lib/jaxwsa-ri.jar;' >
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>

   </target>

   <target name="change-env-for-xws-security.sh" if="isNotWindows" depends="init" >
 <!--
    <echo message="Updating domain.xml with xws-security properties" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='&lt;jvm-options>-Djava.security.auth.login.config=${SJSAS_HOME}/lib/server-jaas.config&lt;/jvm-options> &lt;jvm-options>-Dorg.xml.sax.parser=org.xml.sax.helpers.XMLReaderAdapter &lt;/jvm-options>'>
      <replacetoken><![CDATA[<jvm-options>-Dorg.xml.sax.parser=org.xml.sax.helpers.XMLReaderAdapter </jvm-options>]]></replacetoken>
    </replace>

-->
    <echo message="changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for unix platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='classpath-prefix="${SJSAS_HOME}/lib/xws-security.jar:${SJSAS_HOME}/lib/xws-saml.jar:${SJSAS_HOME}/lib/xws-security_jaxrpc.jar:${SJSAS_HOME}/lib/keyexport.jar:${SJSAS_HOME}/lib/pkcs12import.jar:${SJSAS_HOME}/lib/wss-provider-update.jar:' >
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>

    <antcall target="change-env-for-xml-security.sh"/>

    <echo message="Updating endorsed.dirs property to use the namespace and qname that are coming from JWSDP " />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
     <replacevalue><![CDATA[<jvm-options> -Djava.endorsed.dirs=${com.sun.aas.installRoot}/lib/jwsdp-tools-lib:]]></replacevalue>
      <replacetoken><![CDATA[<jvm-options>-Djava.endorsed.dirs=]]></replacetoken>
    </replace>


  </target>


   <target name="change-env-for-xws-security.bat" if="isWindows" depends="init" >
<!--
    <echo message="Updating domain.xml with xws-security properties" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='&lt;jvm-options>-Djava.security.auth.login.config=${SJSAS_HOME}/lib/server-jaas.config&lt;/jvm-options> &lt;jvm-options>-Dorg.xml.sax.parser=org.xml.sax.helpers.XMLReaderAdapter &lt;/jvm-options>'>
      <replacetoken><![CDATA[<jvm-options>-Dorg.xml.sax.parser=org.xml.sax.helpers.XMLReaderAdapter </jvm-options>]]></replacetoken>
    </replace>

-->

    <echo message="Changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for windows platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='classpath-prefix="${SJSAS_HOME}/lib/xws-security.jar;${SJSAS_HOME}/lib/xws-saml.jar;${SJSAS_HOME}/lib/xws-security_jaxrpc.jar;${SJSAS_HOME}/lib/keyexport.jar;${SJSAS_HOME}/lib/pkcs12import.jar;${SJSAS_HOME}/lib/wss-provider-update.jar;' >
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>

    <antcall target="change-env-for-xml-security.bat"/>

    <echo message="Updating endorsed.dirs property to use the namespace and qname that are coming from JWSDP " />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
     <replacevalue><![CDATA[<jvm-options> -Djava.endorsed.dirs=${com.sun.aas.installRoot}/lib/jwsdp-tools-lib:]]></replacevalue>
      <replacetoken><![CDATA[<jvm-options>-Djava.endorsed.dirs=]]></replacetoken>
    </replace>
   </target>


   <target name="change-env-for-xml-security.sh" if="isNotWindows" depends="init" >
    <echo message="changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for unix platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='classpath-prefix="${SJSAS_HOME}/lib/xmlsec.jar:' >
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>

   </target>


   <target name="change-env-for-xml-security.bat" if="isWindows" depends="init" >
    <echo message="Changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for windows platforms" />
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
     value='classpath-prefix="${SJSAS_HOME}/lib/xmlsec.jar;' >
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>

   </target>


   <target name="revert-classpath-for-jaxb.sh" if="isNotWindows" depends="init" >

    <echo message="reverting changes we put for JAXB in  ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for unix platforms" />
    <!-- Putting saaj-api.jar and saaj-impl.jar ahead of CLASSPATH to avoid some conflict 
	of dependent classes --> 
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
     <replacetoken><![CDATA[server-classpath="${com.sun.aas.installRoot}/lib/activation.jar:${com.sun.aas.installRoot}/lib/endorsed/xercesImpl.jar:${com.sun.aas.installRoot}/lib/endorsed/dom.jar:${com.sun.aas.installRoot}/lib/endorsed/xalan.jar:${com.sun.aas.installRoot}/lib/saaj-api.jar:${com.sun.aas.installRoot}/lib/saaj-impl.jar:${com.sun.aas.installRoot}/lib/jaxrpc-spi.jar:]]></replacetoken>
      <replacevalue><![CDATA[server-classpath="]]></replacevalue>
    </replace>
    
  <!-- Adding JAXB jars to classpath-prefix to override the classes in jaxr jar --> 
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
   <replacetoken><![CDATA[${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/jax-qname.jar:${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/namespace.jar:${com.sun.aas.installRoot}/lib/jaxb-api.jar:${com.sun.aas.installRoot}/lib/jaxb-impl.jar:${com.sun.aas.installRoot}/lib/jaxb1-impl.jar:${com.sun.aas.installRoot}/lib/jaxb-xjc.jar:${com.sun.aas.installRoot}/lib/relaxngDatatype.jar:${com.sun.aas.installRoot}/lib/xsdlib.jar:]]></replacetoken>
      <replacevalue><![CDATA[]]></replacevalue>
    </replace>


  </target>

   <target name="revert-classpath-for-jaxb.bat" if="isWindows" depends="init" >

    <echo message="Reverting changes for JAXB in  ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for windows platforms" />
    <!-- Putting saaj-impl.jar ahead of CLASSPATH to avoid some conflict 
	of dependent classes --> 
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
   <replacetoken><![CDATA[server-classpath="${com.sun.aas.installRoot}/lib/activation.jar;${com.sun.aas.installRoot}/lib/endorsed/xercesImpl.jar;${com.sun.aas.installRoot}/lib/endorsed/dom.jar;${com.sun.aas.installRoot}/lib/endorsed/xalan.jar;${com.sun.aas.installRoot}/lib/saaj-api.jar;${com.sun.aas.installRoot}/lib/saaj-impl.jar;${com.sun.aas.installRoot}/lib/jaxrpc-spi.jar;]]></replacetoken>
      <replacevalue><![CDATA[server-classpath="]]></replacevalue>
    </replace>

  <!-- Adding JAXB jars to classpath-prefix to override the classes in jaxr jar --> 
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
   <replacetoken><![CDATA[${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/jax-qname.jar;${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/namespace.jar;${com.sun.aas.installRoot}/lib/jaxb-api.jar;${com.sun.aas.installRoot}/lib/jaxb-impl.jar;${com.sun.aas.installRoot}/lib/jaxb1-impl.jar;${com.sun.aas.installRoot}/lib/jaxb-xjc.jar;${com.sun.aas.installRoot}/lib/relaxngDatatype.jar;${com.sun.aas.installRoot}/lib/xsdlib.jar:]]></replacetoken>
      <replacevalue><![CDATA[]]></replacevalue>
    </replace>

  </target>

   <target name="change-classpath-for-jaxb.sh" if="isNotWindows" depends="init" >

    <echo message="changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for unix platforms" />
    <!-- Putting saaj-api.jar and saaj-impl.jar ahead of CLASSPATH to avoid some conflict 
	of dependent classes --> 
    <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
     <replacevalue><![CDATA[server-classpath="${com.sun.aas.installRoot}/lib/activation.jar:${com.sun.aas.installRoot}/lib/endorsed/xercesImpl.jar:${com.sun.aas.installRoot}/lib/endorsed/dom.jar:${com.sun.aas.installRoot}/lib/endorsed/xalan.jar:${com.sun.aas.installRoot}/lib/jaxrpc-spi.jar:]]></replacevalue>
      <replacetoken><![CDATA[server-classpath="]]></replacetoken>
    </replace>
    
  <!-- Adding JAXB jars to classpath-prefix to override the classes in jaxr jar --> 
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
   <replacevalue><![CDATA[classpath-prefix="${com.sun.aas.installRoot}/lib/saaj-api.jar:${com.sun.aas.installRoot}/lib/saaj-impl.jar:${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/jax-qname.jar:${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/namespace.jar:${com.sun.aas.installRoot}/lib/jaxb-api.jar:${com.sun.aas.installRoot}/lib/jaxb-impl.jar:${com.sun.aas.installRoot}/lib/jaxb1-impl.jar:${com.sun.aas.installRoot}/lib/jaxb-xjc.jar:${com.sun.aas.installRoot}/lib/relaxngDatatype.jar:${com.sun.aas.installRoot}/lib/xsdlib.jar:]]></replacevalue>
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>

     <!-- Adding jax-qname.jar and namespace.jar to the classpath-suffix  
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
   value='classpath-suffix="${SJSAS_HOME}/lib/jwsdp-tools-lib/jax-qname.jar:${SJSAS_HOME}/lib/jwsdp-tools-lib/namespace.jar:' >
      <replacetoken><![CDATA[classpath-suffix="]]></replacetoken>
    </replace>
    -->


  </target>


   <target name="change-classpath-for-jaxb.bat" if="isWindows" depends="init" >

    <echo message="Changing ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for windows platforms" />
    <!-- Putting saaj-impl.jar ahead of CLASSPATH to avoid some conflict 
	of dependent classes --> 
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
   <replacevalue><![CDATA[server-classpath="${com.sun.aas.installRoot}/lib/activation.jar;${com.sun.aas.installRoot}/lib/endorsed/xercesImpl.jar;${com.sun.aas.installRoot}/lib/endorsed/dom.jar;${com.sun.aas.installRoot}/lib/endorsed/xalan.jar;${com.sun.aas.installRoot}/lib/jaxrpc-spi.jar;]]></replacevalue>
      <replacetoken><![CDATA[server-classpath="]]></replacetoken>
    </replace>

  <!-- Adding JAXB jars to classpath-prefix to override the classes in jaxr jar --> 
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" >
   <replacevalue><![CDATA[classpath-prefix="${com.sun.aas.installRoot}/lib/saaj-api.jar;${com.sun.aas.installRoot}/lib/saaj-impl.jar;${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/jax-qname.jar;${com.sun.aas.installRoot}/lib/jwsdp-tools-lib/namespace.jar;${com.sun.aas.installRoot}/lib/jaxb-api.jar;${com.sun.aas.installRoot}/lib/jaxb-impl.jar;${com.sun.aas.installRoot}/lib/jaxb1-impl.jar;${com.sun.aas.installRoot}/lib/jaxb-xjc.jar;${com.sun.aas.installRoot}/lib/relaxngDatatype.jar;${com.sun.aas.installRoot}/lib/xsdlib.jar;]]></replacevalue>
      <replacetoken><![CDATA[classpath-prefix="]]></replacetoken>
    </replace>


    <!-- Adding JAXB jars to classpath-suffix to override the classes in jaxr jar 
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
   value='classpath-suffix="${SJSAS_HOME}/lib/jwsdp-tools-lib/jax-qname.jar;${SJSAS_HOME}/lib/jwsdp-tools-lib/namespace.jar;' >
      <replacetoken><![CDATA[classpath-suffix="]]></replacetoken>
    </replace>
    -->

  </target>



  <!-- Template for deploying a webapp in SJSAS 9.0 
       You have to replace @yourwar@ with the actual war name,
       @yourwar-logicalname@ to the logicalname which you want to use
       to refer to this webapp instance  and 
       directory-where-war-exist to the actual directory of war 
       location
  -->
  <target name="deploy.yourwar" depends="init">
    <echo message="deploying @yourwar@" />

    <exec executable="${SJSAS_DEPLOY}" vmlauncher="false">
      <arg value="deploy" />
      <arg value="--user" />
      <arg value="${USERNAME}" />
      <arg value="--password" />
      <arg value="${PASSWORD}" />
      <arg value="--host" />
      <arg value="${SJSAS_HOST}" />
      <arg value="--port" />
      <arg value="${ADMIN_PORT}" />
      <arg value="--type" />
      <arg value="web" />
      <arg value="--force=true" />
      <arg value="--name" />
      <arg value="@yourwar-logicalname@" />
      <arg value="--upload=true" />
      <arg value="directory-where-war-exist/@yourwar@.war" />
    </exec>

  </target>

  <!-- Template for undeploying a webapp in SJSAS 9.0 
       You have to replace @yourwar-logicalname@ with the actual
       logical name which you used while deploying
  -->
  <target name="undeploy.yourwar" depends="init">
    <echo message="undeploying @yourwar-logicalname@" />
    <exec executable="${SJSAS_DEPLOY}" vmlauncher="false">
        <arg value="undeploy" />
        <arg value="--user" />
        <arg value="${USERNAME}" />
        <arg value="--password" />
        <arg value="${PASSWORD}" />
        <arg value="--host" />
        <arg value="${SJSAS_HOST}" />
        <arg value="--port" />
        <arg value="${ADMIN_PORT}" />
        <arg value="--type" />
        <arg value="web" />
        <arg value="@yourwar-logicalname@" />
     </exec>

  </target>



  <target name="full-setup">
    <antcall target="setup" />
  </target>

  <target name="revert.jaxp.changes" depends="revert.init"
    description="Revert JAXP from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="deployAll" depends="init"
    description="Deploy web applications into Sun Java System Application Server 9.0">
    <antcall target="deploy.registry.webapps" />
    <antcall target="deploy.saaj.webapps" />
    <antcall target="deploy.wsi-sampleapp.webapps" />

  </target>

  <target name="undeployAll" depends="init"
    description="Undeploy web applications from Sun Java System Application Server 9.0">

    <antcall target="undeploy.registry.webapps" />
    <antcall target="undeploy.saaj.webapps" />
    <antcall target="undeploy.wsi-sampleapp.webapps" />	
  </target>



  <target name="revert.saaj.changes" depends="revert.init"
    description="Revert SAAJ changes from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="undeploy.saaj.webapps" depends="revert.init"
    description="Undeploy SAAJ from Sun Java System Application Server 9.0">

    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-simple.war" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-simple.war_deployed" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/.autodeploystatus/saaj-simple.war" quiet="true" />
    <!-- remove from domain.xml -->
    <replaceregexp file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" match="(.*)saaj-simple(.*)" flags="g" replace="" />

    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-book.war" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-book.war_deployed" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/.autodeploystatus/saaj-book.war" quiet="true" />
    <!-- remove from domain.xml -->
    <replaceregexp file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" match="(.*)saaj-book(.*)" flags="g" replace="" />

    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-translator.war" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/saaj-translator.war_deployed" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/.autodeploystatus/saaj-translator.war" quiet="true" />
    <!-- remove from domain.xml -->
    <replaceregexp file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" match="(.*)saaj-translator(.*)" flags="g" replace="" />

    <delete dir="${DOMAIN_DIR}/${DOMAIN_NAME}/applications/j2ee-modules/saaj-simple" quiet="true" />
    <delete dir="${DOMAIN_DIR}/${DOMAIN_NAME}/applications/j2ee-modules/saaj-book" quiet="true" />
    <delete dir="${DOMAIN_DIR}/${DOMAIN_NAME}/applications/j2ee-modules/saaj-translator" quiet="true" />

  </target>

  <target name="undeploy.spja.webapps" depends="revert.init"
    description="Undeploy SPJA from Sun Java System Application Server 9.0">

    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/script.war" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/script.war_deployed" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/.autodeploystatus/script.war" quiet="true" />
    <delete dir="${DOMAIN_DIR}/${DOMAIN_NAME}/applications/j2ee-modules/script" quiet="true" />

    <!-- remove from domain.xml -->
    <replaceregexp file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" match="(.*)script(.*)" flags="g" replace="" />

  </target>


  <target name="undeploy.jwsdp-callback.webapps" depends="init"
    description="Undeploy JWSDP Callback from Sun Java System Application Server 9.0">

    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/jwsdp-callback.war" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/jwsdp-callback.war_deployed" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/.autodeploystatus/jwsdp-callback.war" quiet="true" />
    <delete dir="${DOMAIN_DIR}/${DOMAIN_NAME}/applications/j2ee-modules/jwsdp-callback" quiet="true" />

    <!-- remove from domain.xml -->
    <replaceregexp file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" match="(.*)jwsdp-callback(.*)" flags="g" replace="" />

  </target>



  <target name="revert.common-jars.changes" depends="revert.init">

    <delete  dir="${SJSAS_HOME}/lib/jwsdp-tools-lib"  quiet="true" />

    <copy file="${JWSDP_BACKUPDIR}/relaxngDatatype.jar" failonerror="false" 
	todir="${SJSAS_HOME}/lib"  overwrite="true" />

    <copy file="${JWSDP_BACKUPDIR}/xsdlib.jar" failonerror="false" 
	todir="${SJSAS_HOME}/lib"  overwrite="true" />

    <delete  file="${SJSAS_HOME}/lib/xmlsec.jar"  quiet="true" />
    <delete  file="${SJSAS_HOME}/lib/resolver.jar"  quiet="true" />

  </target>

  <target name="revert.jaxwsa.changes" depends="init"
    description="Revert JAX-WSA Changes in Sun Java System Application Server 9.0">
    <delete file="${SJSAS_HOME}/lib/jaxwsa-api.jar" quiet="true" />

    <delete file="${SJSAS_HOME}/lib/jaxwsa-ri.jar" quiet="true" />

    <delete file="${SJSAS_HOME}/lib/appserv-ws-update.jar" quiet="true" />

    <echo message="Now Reverting JAX-WS Scripts changes made for JAX-WSA" />
    <copy file="${JWSDP_BACKUPDIR}/appclient.bat" failonerror="false" 
	todir="${SJSAS_HOME}/bin"  overwrite="true" />
    <copy file="${JWSDP_BACKUPDIR}/appclient" failonerror="false" 
	todir="${SJSAS_HOME}/bin"  overwrite="true" />

    <copy file="${JWSDP_BACKUPDIR}/wsgen.bat" failonerror="false" 
	todir="${SJSAS_HOME}/bin"  overwrite="true" />
    <copy file="${JWSDP_BACKUPDIR}/wsgen" failonerror="false" 
	todir="${SJSAS_HOME}/bin"  overwrite="true" />

    <copy file="${JWSDP_BACKUPDIR}/wsimport.bat" failonerror="false" 
	todir="${SJSAS_HOME}/bin"  overwrite="true" />
    <copy file="${JWSDP_BACKUPDIR}/wsimport" failonerror="false" 
	todir="${SJSAS_HOME}/bin"  overwrite="true" />

   <echo message="Revert environment( domain.xml ) changes made for JAX-WSA" />
   <antcall target="revert-env-for-jax-wsa.sh" />
   <antcall target="revert-env-for-jax-wsa.bat" />

  </target>

  <target name="revert.jaxws.changes" depends="init"
    description="Revert JAX-WS Changes in Sun Java System Application Server 9.0">

   <!-- Noop: Do nothing --> 

  </target>


  <target name="revert.jaxrpc.changes" depends="revert.init"
    description="Revert JAX-RPC from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="revert.jaxr.changes" depends="revert.init"
    description="Revert JAXR from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="revert.jaxb.changes" depends="revert.init"
    description="Revert JAXB from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="revert.xws-security.changes" depends="revert.init"
    description="Revert XML and Web Services Security from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>



  <target name="revert.jsf.changes" depends="revert.init"
    description="Revert JSF from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="revert.wsi-sampleapp.changes" depends="revert.init"
    description="Revert WS-I Sample Application from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>


  <target name="revert.jstl.changes" depends="revert.init"
    description="Revert JSTL from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>


  <target name="undeploy.registry.webapps" depends="revert.init"
    description="Undeploy Registry Server from Sun Java System Application Server 9.0" >

    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/soar.war" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/.autodeploystatus/soar.war" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/autodeploy/soar.war_deployed" quiet="true" />
    <delete dir="${DOMAIN_DIR}/${DOMAIN_NAME}/applications/j2ee-modules/soar" quiet="true" />

    <!-- remove from domain.xml -->
    <replaceregexp file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" match="(.*)soar(.*)" flags="g" replace="" />

  </target>


  <target name="revert.xmldsig.changes" depends="revert.init"
    description="Revert JSR 105 from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="revert.spja.changes" depends="revert.init"
    description="Revert JSR 223 from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>

  <target name="revert-env-for-xml-security.sh" if="isNotWindows" depends="init"
>

    <echo message="reverting changes we put for XML-SECURITY in  ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for unix platforms" />
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml" 
        token="${SJSAS_HOME}/lib/xmlsec.jar:">
      <replacevalue><![CDATA[]]></replacevalue>
    </replace>

  </target>


  <target name="revert-env-for-xml-security.bat" if="isWindows" depends="init" >

    <echo message="Reverting changes for XML-SECURITY in  ${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml for windows platforms" />
      <replace file="${DOMAIN_DIR}/${DOMAIN_NAME}/config/domain.xml"
        token="${SJSAS_HOME}/lib/xmlsec.jar;">
      <replacevalue><![CDATA[]]></replacevalue>
    </replace>

  </target>
 


  <target name="revert.sjsxp.changes" depends="revert.init"
    description="Revert StAX from Sun Java System Application Server 9.0">
      <!-- Do nothing -->
  </target>


  <target name="revert.init" depends="init"
    description="Revert initialization changes from Sun Java System Application Server 9.0">
<!--
    <copy file="${JWSDP_BACKUPDIR}/domain.xml" failonerror="false" 
	todir="${DOMAIN_DIR}/${DOMAIN_NAME}/config" overwrite="true" />
-->
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/docroot/JWSDP.html" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/docroot/javaxml.gif" quiet="true" />
    <delete file="${DOMAIN_DIR}/${DOMAIN_NAME}/docroot/Components.js" quiet="true" />
  </target>

  <target name="clean" depends="init"
    description="Clean up temporary directories and undeploy JWSDP Callback for the Sun Java System Application Server 9.0">

    <antcall target="undeploy.jwsdp-callback.webapps" />

    <delete dir="${JWSDP_BACKUPDIR}" quiet="true" />
    <delete dir="${MYTEMPDIR}" quiet="true" />
  </target>


  <target name="revert.sjsas.changes" depends="revert.init"
    description="Backing out Java WSDP 2.0 changes from Sun Java System Application Server 9.0">

    <echo message="Backing out the changes made during Java WSDP 2.0 integration into Sun Java System Application Server 9.0" />

    <echo message="Reverting JAXP changes" />
    <antcall target="revert.jaxp.changes" />

    <echo message="Reverting SAAJ changes" />
    <antcall target="revert.saaj.changes" />

    <echo message="Reverting JAX-RPC changes" />
    <antcall target="revert.jaxrpc.changes" />

    <echo message="Reverting JAX-WS" />
    <antcall target="revert.jaxws.changes" />

    <echo message="Reverting JAX-WSA" />
    <antcall target="revert.jaxwsa.changes" />

    <echo message="Reverting JAXR changes" />
    <antcall target="revert.jaxr.changes" />

    <echo message="Reverting JAXB changes" />
    <antcall target="revert.jaxb.changes" />

    <echo message="Reverting JSTL" />
    <antcall target="revert.jstl.changes" />

    <echo message="Reverting WS-I Sample Application" />
    <antcall target="revert.wsi-sampleapp.changes" />

    <echo message="Reverting XML and Web Services Security" />
    <antcall target="revert.xws-security.changes" />

    <echo message="Reverting XML Digital Signatures" />
    <antcall target="revert.xmldsig.changes" />

    <echo message="Reverting Streaming API for XML" />
    <antcall target="revert.sjsxp.changes" />

    <echo message="Reverting Fast Infoset" />
    <antcall target="revert.fastinfoset.changes" />

    <echo message="Reverting Service Registry changes" />
    <antcall target="revert.registry.changes" />

    <antcall target="clean" />
  </target>

  <target name="integrate.jaxb-scripts.sh" depends="init"  if="isNotWindows" >

    <copy file="${SJSAS_HOME}/bin/wscompile" tofile="${SJSAS_HOME}/bin/xjc.sh"
	overwrite="true" />
    <replace file="${SJSAS_HOME}/bin/xjc.sh">
      <replacetoken><![CDATA[WSCompile]]></replacetoken>
      <replacevalue><![CDATA[xjc]]></replacevalue>
    </replace>

  <!-- Avoid setting endorsed dir. As we did package renaming and have services entry this is not needed to be set     
  <replacevalue><![CDATA[JAVA_ENDORSED_DIRS="$AS_WEBSERVICES_LIB"/jaxp-renamed  -->

    <replace file="${SJSAS_HOME}/bin/xjc.sh">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH="$AS_WEBSERVICES_LIB"/jwsdp-tools-lib/jax-qname.jar:"$AS_WEBSERVICES_LIB"/jwsdp-tools-lib/namespace.jar:"$AS_WEBSERVICES_LIB"/jaxb-api.jar:"$AS_WEBSERVICES_LIB"/jaxb-impl.jar:"$AS_WEBSERVICES_LIB"/jaxb1-impl.jar:"$AS_WEBSERVICES_LIB"/jaxb-xjc.jar:"$AS_WEBSERVICES_LIB"/relaxngDatatype.jar:"$AS_WEBSERVICES_LIB"/xsdlib.jar:"$AS_WEBSERVICES_LIB"/xercesImpl.jar:"$AS_WEBSERVICES_LIB"/xalan.jar:"$AS_WEBSERVICES_LIB"/endorsed/dom.jar:]]></replacevalue>
    </replace>

    <replace file="${SJSAS_HOME}/bin/xjc.sh">
      <replacetoken><![CDATA[com.sun.xml.rpc.tools.wscompile.Main]]></replacetoken>
      <replacevalue><![CDATA[com.sun.tools.xjc.Driver]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/xjc.sh" />

  </target>

  <target name="integrate.jaxb-scripts.bat" depends="init" if="isWindows" >

    <copy file="${SJSAS_HOME}/bin/wscompile.bat" tofile="${SJSAS_HOME}/bin/xjc.bat"
	overwrite="true" />
    <replace file="${SJSAS_HOME}/bin/xjc.bat">
      <replacetoken><![CDATA[WSCompile]]></replacetoken>
      <replacevalue><![CDATA[xjc]]></replacevalue>
    </replace>

    <replace file="${SJSAS_HOME}/bin/xjc.bat">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH=%AS_WEBSERVICES_LIB%\jwsdp-tools-lib\jax-qname.jar;%AS_WEBSERVICES_LIB%\jwsdp-tools-lib\namespace.jar;%AS_WEBSERVICES_LIB%\jaxb-api.jar;%AS_WEBSERVICES_LIB%\jaxb-impl.jar;%AS_WEBSERVICES_LIB%\jaxb1-impl.jar;%AS_WEBSERVICES_LIB%\jaxb-xjc.jar;%AS_WEBSERVICES_LIB%\relaxngDatatype.jar;%AS_WEBSERVICES_LIB%\xsdlib.jar;%AS_WEBSERVICES_LIB%\xercesImpl.jar;%AS_WEBSERVICES_LIB%\xalan.jar;%AS_WEBSERVICES_LIB%\endorsed\xalan.jar;]]></replacevalue>
    </replace>

    <replace file="${SJSAS_HOME}/bin/xjc.bat">
      <replacetoken><![CDATA[com.sun.xml.rpc.tools.wscompile.Main]]></replacetoken>
      <replacevalue><![CDATA[com.sun.tools.xjc.Driver]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/xjc.bat" />
  </target>

  <target name="update.jaxws-scripts.bat" depends="init"  if="isWindows" >

    <copy file="${SJSAS_HOME}/bin/appclient.bat"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

    <replace file="${SJSAS_HOME}/bin/appclient.bat">
      <replacetoken><![CDATA[%AS_WEBSERVICES_LIB%\appserv-ws.jar]]></replacetoken>
      <replacevalue><![CDATA[%AS_WEBSERVICES_LIB%\appserv-ws-update.jar;%AS_WEBSERVICES_LIB%\appserv-ws.jar]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/appclient.bat" />


    <copy file="${SJSAS_HOME}/bin/wsgen.bat"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

     <replace file="${SJSAS_HOME}/bin/wsgen.bat">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH=%AS_WEBSERVICES_LIB%\appserv-ws-update.jar;%AS_WEBSERVICES_LIB%\jaxwsa-api.jar;%AS_WEBSERVICES_LIB%\jaxwsa-ri.jar;]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/wsgen.bat" />

    <copy file="${SJSAS_HOME}/bin/wsimport.bat"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

     <replace file="${SJSAS_HOME}/bin/wsimport.bat">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH=%AS_WEBSERVICES_LIB%\appserv-ws-update.jar;%AS_WEBSERVICES_LIB%\jaxwsa-api.jar;%AS_WEBSERVICES_LIB%\jaxwsa-ri.jar;]]></replacevalue>
    </replace>
    <chmod perm="+x" file="${SJSAS_HOME}/bin/wsimport.bat" />

  </target>

  <target name="update.jaxws-scripts.sh" depends="init"  if="isNotWindows" >

    <copy file="${SJSAS_HOME}/bin/appclient"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

    <replace file="${SJSAS_HOME}/bin/appclient">
      <replacetoken><![CDATA["$AS_WEBSERVICES_LIB/appserv-ws.jar"]]></replacetoken>
      <replacevalue><![CDATA["$AS_WEBSERVICES_LIB/appserv-ws-update.jar":"$AS_WEBSERVICES_LIB/appserv-ws.jar"]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/appclient" />

    <copy file="${SJSAS_HOME}/bin/wsgen"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

     <replace file="${SJSAS_HOME}/bin/wsgen">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH="$AS_WEBSERVICES_LIB"/appserv-ws-update.jar:"$AS_WEBSERVICES_LIB"/jaxwsa-api.jar:"$AS_WEBSERVICES_LIB"/jaxwsa-ri.jar:]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/wsgen" />

    <copy file="${SJSAS_HOME}/bin/wsimport"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />
     <replace file="${SJSAS_HOME}/bin/wsimport">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH="$AS_WEBSERVICES_LIB"/appserv-ws-update.jar:"$AS_WEBSERVICES_LIB"/jaxwsa-api.jar:"$AS_WEBSERVICES_LIB"/jaxwsa-ri.jar:]]></replacevalue>
    </replace>
    <chmod perm="+x" file="${SJSAS_HOME}/bin/wsimport" />
  </target>


  <target name="update-jaxrpc-scripts.sh" depends="init"  if="isNotWindows" >

    <!-- jaxrpc-impl.jar in AS 9.X is combination of actual jaxrpc-impl.jar & jaxrpc-spi.jar -->
    <replace file="${SJSAS_HOME}/bin/appclient">
      <replacetoken><![CDATA["$AS_WEBSERVICES_LIB/jaxrpc-impl.jar"]]></replacetoken>
      <replacevalue><![CDATA["$AS_WEBSERVICES_LIB/FastInfoset.jar":"$AS_WEBSERVICES_LIB/jsr173_api.jar":"$AS_WEBSERVICES_LIB/jaxrpc-impl.jar":"$AS_WEBSERVICES_LIB/jaxrpc-spi.jar"]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/appclient" />

    <copy file="${SJSAS_HOME}/bin/wscompile"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

    <replace file="${SJSAS_HOME}/bin/wscompile">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH="$AS_WEBSERVICES_LIB"/jaxp-api.jar:"$AS_WEBSERVICES_LIB"/jaxrpc-spi.jar:"$AS_WEBSERVICES_LIB"/jwsdp-tools-lib/jax-qname.jar:"$AS_WEBSERVICES_LIB"/relaxngDatatype.jar:"$AS_WEBSERVICES_LIB"/xsdlib.jar:"$AS_WEBSERVICES_LIB"/xercesImpl.jar:"$AS_WEBSERVIES_LIB"/xalan.jar:"$AS_WEBSERVIES_LIB"/endorsed/dom.jar:]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/wscompile" />

    <echo message="Updating wsdeploy now" />

    <copy file="${SJSAS_HOME}/bin/wsdeploy"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

    <replace file="${SJSAS_HOME}/bin/wsdeploy">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH="$AS_WEBSERVICES_LIB"/jaxp-api.jar:"$AS_WEBSERVICES_LIB"/jaxrpc-spi.jar:"$AS_WEBSERVICES_LIB"/jwsdp-tools-lib/jax-qname.jar:"$AS_WEBSERVICES_LIB"/relaxngDatatype.jar:"$AS_WEBSERVICES_LIB"/xsdlib.jar:"$AS_WEBSERVICES_LIB"/xercesImpl.jar:"$AS_WEBSERVIES_LIB"/xalan.jar:"$AS_WEBSERVIES_LIB"/endorsed/dom.jar:]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/wsdeploy" />
  </target>

  <target name="update-jaxrpc-scripts.bat" depends="init"  if="isWindows" >

    <!-- jaxrpc-impl.jar in AS 9.X is combination of actual jaxrpc-impl.jar & jaxrpc-spi.jar -->
    <replace file="${SJSAS_HOME}/bin/appclient.bat">
      <replacetoken><![CDATA[%AS_WEBSERVICES_LIB%\jaxrpc-impl.jar]]></replacetoken>
      <replacevalue><![CDATA[%AS_WEBSERVICES_LIB%\FastInfoset.jar;%AS_WEBSERVICES_LIB%\jsr173_api.jar;%AS_WEBSERVICES_LIB%\jaxrpc-impl.jar;%AS_WEBSERVICES_LIB%\jaxrpc-spi.jar]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/appclient.bat" />

    <copy file="${SJSAS_HOME}/bin/wscompile.bat"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

    <replace file="${SJSAS_HOME}/bin/wscompile.bat">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH=%AS_WEBSERVICES_LIB%\jaxp-api.jar;%AS_WEBSERVICES_LIB%\jaxrpc-spi.jar;%AS_WEBSERVICES_LIB%\jwsdp-tools-lib\jax-qname.jar;%AS_WEBSERVICES_LIB%\relaxngDatatype.jar;%AS_WEBSERVICES_LIB%\xsdlib.jar;%AS_WEBSERVICES_LIB%\xercesImpl.jar;%AS_WEBSERVICES_LIB%\xalan.jar;%AS_WEBSERVICES_LIB%\endorsed\dom.jar;]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/wscompile.bat" />

    <echo message="Now updating wsdeploy.bat" />
    <copy file="${SJSAS_HOME}/bin/wsdeploy.bat"
	todir="${JWSDP_BACKUPDIR}" overwrite="false" />

    <replace file="${SJSAS_HOME}/bin/wsdeploy.bat">
      <replacetoken><![CDATA[CLASSPATH=]]></replacetoken>
      <replacevalue><![CDATA[CLASSPATH=%AS_WEBSERVICES_LIB%\jaxp-api.jar;%AS_WEBSERVICES_LIB%\jaxrpc-spi.jar;%AS_WEBSERVICES_LIB%\jwsdp-tools-lib\jax-qname.jar;%AS_WEBSERVICES_LIB%\relaxngDatatype.jar;%AS_WEBSERVICES_LIB%\xsdlib.jar;%AS_WEBSERVICES_LIB%\xercesImpl.jar;%AS_WEBSERVICES_LIB%\xalan.jar;%AS_WEBSERVICES_LIB%\endorsed\dom.jar;]]></replacevalue>
    </replace>

    <chmod perm="+x" file="${SJSAS_HOME}/bin/wsdeploy.bat" />
  </target>
 
  <target name="revert.jdbc-rowset.changes" depends="revert.init">
    <delete  file="${SJSAS_HOME}/lib/rowset.jar"  quiet="true" />
  </target>

  <!-- Target for integrating jdbc-rowset into AppServer 9.0 PE -->
  <target name="integrate.jdbc-rowset" depends="init" if="jdbc-rowset.integrated"
    description="Integrating JDBC RowSet into Sun One Java System AppServer 9.0 PE">

    <echo message="Copying JDBC RowSet jar file to ${SJSAS_HOME}/lib" />

   <!-- As we are keeping jar file in lib dir of SJSAS_HOME we don't
        need to update CLASSPATH -->
   <copy file="${JWSDP_HOME}/jdbc-rowset/lib/rowset.jar"
        todir="${SJSAS_HOME}/lib" overwrite="yes"/>

  </target>

  <target name="integrate.fastinfoset" depends="init"
    description="Integrate Fast Infoset into Sun Java System Application Server 9.0">
      <!-- Do nothing -->
 </target>

  <target name="revert.fastinfoset.changes" depends="init"
    description="Revert Fast Infoset changes">
      <!-- Do nothing -->
 </target>

  <target name="integrate.registry" depends="init" >
    <echo message="In integrate.registry. No-Op For now" />
      <!-- Do nothing -->
  </target>


  <target name="revert.registry.changes" depends="init"
    description="Revert Service Registry changes">
      <!-- Do nothing -->
 </target>

</project>


