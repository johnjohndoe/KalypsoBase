config.refresh=Configurator service invoked with refresh=\"{0}\"
config.uddi=Getting config options from UDDI business registry \"{0}\"

config.uddi.relnship=Retrieving uddi:businessKeys with reciprocal relationship
config.uddi.relatedTo=\"{0}\" relatedTo \"{1}\"
config.uddi.assoc=confirmed: {0}
config.uddi.confirmed={0} has confirmed relationship with WS-I business entity
config.uddi.notConfirmed={0} does not have a confirmed relationship with WS-I business entity
config.showcase.services=Retrieve services for the showcase business entities
config.showcase.orgLength={0} # of organizations
config.showcase.org.servicesLength=Found {0} services for \"{1}\" organization
config.showcase.services.org={0}th organization: Getting services for \"{1}\" ...
config.showcase.service.name={0}th service: {1} '{'{2}'}'
config.showcase.service.name.notFound=Service name is not valid; setting to the endpoint address '{'{0}'}'
config.showcase.service.tModel={0}'{'{1}'}' tModel found
config.showcase.service.ignore=Ignoring the configurator service for showcase
config.showcase.service.tModel.notShowcase={0}'{'{1}'}' is not a showcase tModel
config.showcase.service.instanceParams=instanceParams: {0}
config.showcase.service.category=Searching for categorizations ...
config.showcase.service.category.empty=categorization: empty
config.showcase.service.category.value=categorization: '{'{0}'}', {1}
config.showcase.service.search=... search complete
config.showcase.service.role.retailer=Setting role for Retailer ...
config.showcase.service.role.logging=Setting role for LoggingFacility ...
config.showcase.service.role.notSet=No role set for {0} '{'{1}'}'
config.showcase.service.type=service type: {0}
config.showcase.service.role=role: {0}
config.showcase.service.role.invalid=Invalid role
config.showcase.service.adding=Adding service {0} '{'{1}'}'

config.cache=Reading the endpoints from local cache ...
config.cache.ip=Server IP: {0}
config.cache.ip.noDetect=Not able to detect IP address of the machine, using default \"localhost\"
config.cache.selectionParams=selection params: {0}
config.cache.endpoint=endpoint: {0}
config.cache.replace.host=Replacing \"localhost\" in \"{0}\" to \"{1}\"
config.cache.serviceLength={0} services found

config.cache.update=Updating configurator cache for {0} services ...
config.cache.update.thService=Adding {0}th service: {1}
config.cache.update.type=service type: {0}
config.cache.update.endpoint=endpoint: {0}
config.cache.update.selectionParams=selection params: {0}

