<?xml version="1.0" encoding="UTF-8" ?>

<!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Common build file for xmlbeans binding projects.

The following targets are defined here:
- clean: cleans all generated stuff
- init
- generate: runs xjc against the schemas to generate the source files

It is designed to be imported using the following syntax:

 <import file="${project}/../KalypsoBuild/common-binding/build-xmlbeans.xml" />

Define following properties in importing script
	
	<property name="project" value="full path of the project..." />
	<property name="xmlbean.classgendir" value="full path of the project..." />
	
And the following patternset defines, which .xsd files relativ to the project basedir will be bound 
	
	<patternset id="binding.schemata">
      <include name="etc/schemas/sld/**/*.xsd"/>
    </patternset>

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->

<project name="commonbinding" default="generate">

	<path id="binding.classpath">
		<fileset dir="${project}/../KalypsoCommons">
			<include name="lib/xmlbeans-*/*.jar" />
		</fileset>
	</path>

	<taskdef name="xmlbean" classname="org.apache.xmlbeans.impl.tool.XMLBean" classpathref="binding.classpath"/>

	<target name="clean" description="cleans it up - totally">
		<echo message="Deleting old sources for ${project}" />
		<delete includeemptydirs="true" failonerror="false" >
			<fileset dir="${xmlbean.srcgendir}" includes="**/*"/>
		</delete>
	</target>

	<target name="generate" description="erzeugt die sourcen">
		<echo message="Generating binding sources for ${project}" />

		<mkdir dir="${xmlbean.classgendir}"/>
		<xmlbean classgendir="${xmlbean.classgendir}" srcgendir="${xmlbean.srcgendir}" memoryMaximumSize="128M" classpathref="binding.classpath" srconly="${xmlbean.srconly}">
			<fileset dir="${project}">
				<patternset refid="binding.schemata" />
			</fileset>
		</xmlbean>
	</target>

	<!-- REMARK: This is a speciality of xml-beans: xml-beans generates a lot of non-class files, that are needed for the binding stuff to run. Among them are files with extension '.class'., that are NOT automatically copied by eclipse into the binary folder while compilation. So we need to copy them ourselfes.-->
	<target name="copyClassStuff">
		<copy todir="${xmlbean.copyClassStuffTarget}">
			<fileset dir="${xmlbean.srcgendir}" includes="**/*.class" />
			<fileset dir="${xmlbean.srcgendir}" includes="**/*.xsb" />
		</copy>
	</target>
</project>