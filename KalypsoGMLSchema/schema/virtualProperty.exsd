<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.kalypso.gmlschema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.kalypso.gmlschema" id="virtualProperty" name="virtualProperty"/>
      </appInfo>
      <documentation>
         This extension-point allows the registration of virtual properties for gml feature types.&lt;br&gt;
In contrast to define a virtual property as an annotation within the gml application-schema, this extension-point allows the definition of virtual properties without changing the original schema.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="virtualProperty" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="virtualProperty">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="qname"/>
         </appInfo>
         <documentation>
            This element registers (virtual) value properties for existing gml feature types.&lt;br&gt;
Each virtual property has an associated function, that implements the get/set of this property&lt;br&gt;
The implementation of the function itself is defined in the KalypsoDeegree plug-in, as the feature-api is needed (which is not available here).
If a new property is registered for a certain qname, every featuere with that qname gets a new property of the registered kind.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="property" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="qname" type="string" use="required">
            <annotation>
               <documentation>
                  The qname of this property.&lt;br&gt;
Must be of form {namespace}localPart.&lt;br&gt;
Example: {myVirtualNamespace}anotherProperty
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  The qname of the type of the values of this property in the form {namespace}localPart. &lt;br&gt;For example: {http://www.w3.org/2001/XMLSchema}string.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isList" type="boolean">
            <annotation>
               <documentation>
                  Defaults to &lt;code&gt;false&lt;/code&gt;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="feature" type="string" use="required">
            <annotation>
               <documentation>
                  The qname of the enclosing feature for that this property is registered&lt;br&gt;
Must be of form {namespace}localPart.&lt;br&gt;
Example: {http://www.opengis.net/gml}_Feature
               </documentation>
            </annotation>
         </attribute>
         <attribute name="allowSubstitution" type="boolean">
            <annotation>
               <documentation>
                  If set to &lt;code&gt;true&lt;/code&gt;, every feature that substitutes the original feature also gets this virtual property. Else, only the original feature will have it.&lt;br&gt;
Defaults to &lt;code&gt;true&lt;/code&gt;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="function" type="string" use="required">
            <annotation>
               <documentation>
                  Id of the function implementation defined by a &apos;function&apos; element of the org.kalypso.deegree.functionProperty extension-point.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="property">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" translatable="true"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
