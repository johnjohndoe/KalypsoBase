RegisterObsProviderListenerJob_0=registering obs provider listener for zml source: %s
ZmlColumnLoadCommand_0=ZmlColumnLoadCommand - doExecute(): %s (provider: %s)\n
ZmlColumnLoadCommand_1=ZmlColumnLoadCommand - ObsProvider.addListener(): %s (provider: %s)\n
ZmlColumnLoadCommand_2=ZmlColumnLoadCommand.observationReplaced(): %s (provider: %s\n
ZmlColumnLoadCommand_3=ZmlColumnLoadCommand.observationChanged(): %s\n
ZmlColumnLoadCommand_4=ZmlColumnLoadCommand.cancel(): %s\n
ZmlColumnLoadCommand_5=ZmlColumnLoadCommand.doExecute(): %s\n
ZmlColumnLoadCommand_6=ZmlColumnLoadCommand - Loading model column canceled: %s\n
ZmlColumnLoadCommand_7=ZmlColumnLoadCommand - Adding new model column: %s\n
ZmlFilterWorker_0=Unsupported ZML-Filter: %s
ZmlInterpolationWorker_0=(Re)Interpolating values failed
ZmlInterpolationWorker_1=ZML Interpolation Worker
ZmlModel_0=ZmlTableModel - doClean()-ing model
ZmlModel_1=mutex - fire zml model changed
ZmlModel_2=firing zml model changes
ZmlModel_3=ZmlTableModel - Setting ignore types\n
ZmlModelInitializer_0=ZmlTableModel - Adding element: %s, %s\n
ZmlModelInitializer_1=ZmlTableModel - Adding element: %s, %s\n
ZmlRuleResolver_1=Resolving style failed
ZmlStyleResolver_1=Resolving style failed
